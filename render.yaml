services:
  - name: auth
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${AUTH_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: cart
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${CART_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: category
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${CATEGORY_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: chat
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${CHAT_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: dish
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${DISH_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: employee
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${EMPLOYEE_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: favorite
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${FAVORITE_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: foodtype
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${FOODTYPE_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: location
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${LOCATION_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: message
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${MESSAGE_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: notification
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${NOTIFICATION_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: order
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${ORDER_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: shipper
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${SHIPPER_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health

  - name: store
    type: web
    env: node
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: PORT
        value: ${STORE_SERVICE_PORT}
    disk:
      mountPath: /usr/src/app/node_modules
      sizeGB: 1
    healthCheckPath: /health
